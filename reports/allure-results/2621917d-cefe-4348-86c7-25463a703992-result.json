{"name": "3.SOL-USD 100 settlementCurrency buy test", "status": "failed", "statusDetails": {"message": "AssertionError: execute api did not EXECUTED\nassert 'TRADE_UNSUCC..._PLEASE_RETRY' == 'EXECUTED'\n  \n  - EXECUTED\n  + TRADE_UNSUCCESSFUL_PLEASE_RETRY", "trace": "case_type = 'Positive', case_title = '3.SOL-USD 100 settlementCurrency buy test'\nquote_param = {'quoteRequest': {'buyTradedCurrency': True, 'settlementCurrency': 'USD', 'settlementCurrencyAmount': 100, 'tradedCurrency': 'SOL'}}\nquote_expected = 'FULL_QUOTE', execute_expected = 'EXECUTED'\n\n    @pytest.mark.usefixtures(\"rfq_order_before_check\")\n    @pytest.mark.parametrize('case_type,case_title,quote_param,quote_expected,execute_expected',\n                             rfq_data_output(testdata))\n    @allure.parent_suite(\"RFQ API TEST\")\n    @allure.suite(\"IPA Test Cases\")\n    @allure.epic('RFQ API TEST')\n    @allure.feature(\"IPA Test Cases\")\n    @allure.title(\"{case_title}\")\n    @pytest.mark.flaky(reruns=reruns, reason='Quote Or Execute may Fail')\n    def test_makeRFQorder(case_type, case_title, quote_param, quote_expected, execute_expected):\n        allure.dynamic.story(f\"{case_type} Test Cases\")\n        allure.dynamic.sub_suite(f\"{case_type} Test Cases\")\n        logger.log(case_type)\n        try:\n            check_ccy_pair(quote_param)\n            client = RFQorder()\n            client.check_aggregated_balance_dic_before_trade()\n            client.quote_request(quote_param, quote_expected)\n            client.check_before_trade()\n            client.execute_request(execute_expected)\n            client.compare_quote_execute_details()\n            client.check_after_trade()\n            client.check_user_tran()\n            client.check_RFS_console_tran()\n            client.assertion_ops_tran_RFQ()\n    \n        except AssertionError or Exception as e:\n            # 如果失败，等待一段时间再重试\n            time.sleep(2)  # 等待 2 秒\n>           raise e\n\ntestcase/test_RFQorder.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntestcase/test_RFQorder.py:184: in test_makeRFQorder\n    client.execute_request(execute_expected)\ntestcase/test_RFQorder.py:104: in execute_request\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_RFQorder.RFQorder object at 0x7fe4285c7a00>\nexecute_expected = 'EXECUTED'\n\n    @allure.step(\"Make Execute Request\")\n    def execute_request(self, execute_expected):\n        execute_param_ = {'tradeRequest': {}}\n        execute_param_['tradeRequest']['quoteId'] = self.quote_id\n        try:\n            execute_res = execute_trade(execute_param_, self.trace_id)\n            self.execute_res = execute_res\n            assert execute_res[\n                       'response'].status_code == 200, f\"Expected status code 200, but got {execute_res['response'].status_code}\"\n>           assert execute_res['res']['tradeResponse'][\n                       'responseCode'] == execute_expected, f'execute api did not {execute_expected}'\nE                      AssertionError: execute api did not EXECUTED\nE                      assert 'TRADE_UNSUCC..._PLEASE_RETRY' == 'EXECUTED'\nE                        \nE                        - EXECUTED\nE                        + TRADE_UNSUCCESSFUL_PLEASE_RETRY\n\ntestcase/test_RFQorder.py:90: AssertionError"}, "steps": [{"name": "check_ccy_pair", "status": "passed", "steps": [{"name": "rfs_cc_pair_status", "status": "passed", "start": 1725334087857, "stop": 1725334088429}], "parameters": [{"name": "quote_req", "value": "{'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USD', 'settlementCurrencyAmount': 100}}"}], "start": 1725334087857, "stop": 1725334088430}, {"name": "record aggregated_balance_before trade", "status": "passed", "steps": [{"name": "rfs_aggregated_positions", "status": "passed", "start": 1725334088430, "stop": 1725334089104}], "start": 1725334088430, "stop": 1725334089104}, {"name": "Asking QuoteId Request", "status": "passed", "attachments": [{"name": "Asking QuoteId Details", "source": "00759415-a431-4f0a-b001-15b601ebe1a9-attachment.json", "type": "application/json"}], "parameters": [{"name": "quote_param", "value": "{'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USD', 'settlementCurrencyAmount': 100}}"}, {"name": "quote_expected", "value": "'FULL_QUOTE'"}], "start": 1725334089105, "stop": 1725334089712}, {"name": "Check Balance Before Trade", "status": "passed", "steps": [{"name": "brokerage_balance_order_before_check", "status": "passed", "steps": [{"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'SOL'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334089713, "stop": 1725334090276}, {"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'USD'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334090276, "stop": 1725334090901}], "parameters": [{"name": "res", "value": "{'response': <Response [200]>, 'res': {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USD', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '100', 'quotedTradedCurrencyAmount': '0.72380483', 'executedPrice': '138.158789', 'retailRateInSettlementCurrency': '138.158789', 'quoteId': 'ZdRoNoTQV/Bwk/dzOQkfaXDZRMP26laQYkUuQ857YlUhT1WVNpCQdhv/qxYBfshU5Da2BZQicsh1snhDB/MWD41OOaKX7nrxb6dn5BGK4RoNV1Q4KqoOz6HYomdChAnX1P1+L3BT3TxCqg2dRTfm3gGttZRrqS72f21FdRn3ojfApIeUL6XTmXwuqYyUhbrD342VA2RVw0sWfLDNswY+8F97IWiJLJVyg8zBSNz+915VuNP057Y0zD6WGmKqs16UEpqjL24QQx9CDYgpk2ToO0ahvHxOHKJKUibBp4WPKfI3FnnYFQ6QyqcmGWrE2Ys76XhlPLYBFrKDObvW7GveCWGeQaI=', 'quoteExpiresAt': 1725334096635, 'quoteCreatedAt': 1725334089635, 'dealerSettlementCurrency': 'USD', 'dealerSettlementCurrencyAmount': '100', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334089635, 'resultCode': 'OK'}, 'req_msg': \"<Request> [40bddcc2-c582-48f8-abce-ce0ccab3e91a] => POST api/3/retail/quote <Param> => {'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USD', 'settlementCurrencyAmount': 100}, 'tonce': 1725334089105016}\", 'res_msg': \"<Response> [40bddcc2-c582-48f8-abce-ce0ccab3e91a] => {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USD', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '100', 'quotedTradedCurrencyAmount': '0.72380483', 'executedPrice': '138.158789', 'retailRateInSettlementCurrency': '138.158789', 'quoteId': 'ZdRoNoTQV/Bwk/dzOQkfaXDZRMP26laQYkUuQ857YlUhT1WVNpCQdhv/qxYBfshU5Da2BZQicsh1snhDB/MWD41OOaKX7nrxb6dn5BGK4RoNV1Q4KqoOz6HYomdChAnX1P1+L3BT3TxCqg2dRTfm3gGttZRrqS72f21FdRn3ojfApIeUL6XTmXwuqYyUhbrD342VA2RVw0sWfLDNswY+8F97IWiJLJVyg8zBSNz+915VuNP057Y0zD6WGmKqs16UEpqjL24QQx9CDYgpk2ToO0ahvHxOHKJKUibBp4WPKfI3FnnYFQ6QyqcmGWrE2Ys76XhlPLYBFrKDObvW7GveCWGeQaI=', 'quoteExpiresAt': 1725334096635, 'quoteCreatedAt': 1725334089635, 'dealerSettlementCurrency': 'USD', 'dealerSettlementCurrencyAmount': '100', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334089635, 'resultCode': 'OK'}\"}"}], "start": 1725334089713, "stop": 1725334090902}], "start": 1725334089713, "stop": 1725334090902}, {"name": "Make Execute Request", "status": "failed", "statusDetails": {"message": "AssertionError: execute api did not EXECUTED\nassert 'TRADE_UNSUCC..._PLEASE_RETRY' == 'EXECUTED'\n  \n  - EXECUTED\n  + TRADE_UNSUCCESSFUL_PLEASE_RETRY\n", "trace": "  File \"/Users/shawn.xiao/PycharmProjects/pythonProject4/.venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/shawn.xiao/PycharmProjects/pythonProject4/testcase/test_RFQorder.py\", line 104, in execute_request\n    raise e\n  File \"/Users/shawn.xiao/PycharmProjects/pythonProject4/testcase/test_RFQorder.py\", line 90, in execute_request\n    assert execute_res['res']['tradeResponse'][\n"}, "steps": [{"name": "Execute Fail and Check if money lost", "status": "passed", "steps": [{"name": "brokerage_balance_order_before_check", "status": "passed", "steps": [{"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'SOL'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334091775, "stop": 1725334092491}, {"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'USD'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334092491, "stop": 1725334093432}], "parameters": [{"name": "res", "value": "{'response': <Response [200]>, 'res': {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USD', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '100', 'quotedTradedCurrencyAmount': '0.72380483', 'executedPrice': '138.158789', 'retailRateInSettlementCurrency': '138.158789', 'quoteId': 'ZdRoNoTQV/Bwk/dzOQkfaXDZRMP26laQYkUuQ857YlUhT1WVNpCQdhv/qxYBfshU5Da2BZQicsh1snhDB/MWD41OOaKX7nrxb6dn5BGK4RoNV1Q4KqoOz6HYomdChAnX1P1+L3BT3TxCqg2dRTfm3gGttZRrqS72f21FdRn3ojfApIeUL6XTmXwuqYyUhbrD342VA2RVw0sWfLDNswY+8F97IWiJLJVyg8zBSNz+915VuNP057Y0zD6WGmKqs16UEpqjL24QQx9CDYgpk2ToO0ahvHxOHKJKUibBp4WPKfI3FnnYFQ6QyqcmGWrE2Ys76XhlPLYBFrKDObvW7GveCWGeQaI=', 'quoteExpiresAt': 1725334096635, 'quoteCreatedAt': 1725334089635, 'dealerSettlementCurrency': 'USD', 'dealerSettlementCurrencyAmount': '100', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334089635, 'resultCode': 'OK'}, 'req_msg': \"<Request> [40bddcc2-c582-48f8-abce-ce0ccab3e91a] => POST api/3/retail/quote <Param> => {'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USD', 'settlementCurrencyAmount': 100}, 'tonce': 1725334089105016}\", 'res_msg': \"<Response> [40bddcc2-c582-48f8-abce-ce0ccab3e91a] => {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USD', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '100', 'quotedTradedCurrencyAmount': '0.72380483', 'executedPrice': '138.158789', 'retailRateInSettlementCurrency': '138.158789', 'quoteId': 'ZdRoNoTQV/Bwk/dzOQkfaXDZRMP26laQYkUuQ857YlUhT1WVNpCQdhv/qxYBfshU5Da2BZQicsh1snhDB/MWD41OOaKX7nrxb6dn5BGK4RoNV1Q4KqoOz6HYomdChAnX1P1+L3BT3TxCqg2dRTfm3gGttZRrqS72f21FdRn3ojfApIeUL6XTmXwuqYyUhbrD342VA2RVw0sWfLDNswY+8F97IWiJLJVyg8zBSNz+915VuNP057Y0zD6WGmKqs16UEpqjL24QQx9CDYgpk2ToO0ahvHxOHKJKUibBp4WPKfI3FnnYFQ6QyqcmGWrE2Ys76XhlPLYBFrKDObvW7GveCWGeQaI=', 'quoteExpiresAt': 1725334096635, 'quoteCreatedAt': 1725334089635, 'dealerSettlementCurrency': 'USD', 'dealerSettlementCurrencyAmount': '100', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334089635, 'resultCode': 'OK'}\"}"}], "start": 1725334091775, "stop": 1725334093433}], "start": 1725334091775, "stop": 1725334093433}], "attachments": [{"name": "Make Execute Details", "source": "6fcd157a-4228-4c22-9371-6c8a2a5a550f-attachment.json", "type": "application/json"}], "parameters": [{"name": "execute_expected", "value": "'EXECUTED'"}], "start": 1725334090902, "stop": 1725334093433}], "parameters": [{"name": "case_type", "value": "'Positive'"}, {"name": "case_title", "value": "'3.SOL-USD 100 settlementCurrency buy test'"}, {"name": "quote_param", "value": "{'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USD', 'settlementCurrencyAmount': 100}}"}, {"name": "quote_expected", "value": "'FULL_QUOTE'"}, {"name": "execute_expected", "value": "'EXECUTED'"}], "start": 1725334087856, "stop": 1725334095440, "uuid": "ead7d5d6-3d77-4b2a-914b-8effa838f94b", "historyId": "ba76d41bb93da3347ebf75be2eed6aba", "testCaseId": "5be44c1e5767aad4688d40906fc19936", "fullName": "testcase.test_RFQorder#test_makeRFQorder", "labels": [{"name": "story", "value": "Positive Test Cases"}, {"name": "subSuite", "value": "Positive Test Cases"}, {"name": "epic", "value": "RFQ API TEST"}, {"name": "parentSuite", "value": "RFQ API TEST"}, {"name": "feature", "value": "IPA Test Cases"}, {"name": "suite", "value": "IPA Test Cases"}, {"name": "tag", "value": "flaky(reruns=1, reason='Quote Or Execute may Fail')"}, {"name": "tag", "value": "@pytest.mark.usefixtures('rfq_order_before_check')"}, {"name": "host", "value": "shawnxiaooslcom.local"}, {"name": "thread", "value": "69044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_RFQorder"}]}