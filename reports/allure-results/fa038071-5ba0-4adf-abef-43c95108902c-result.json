{"name": "5.SOL-USDT 5 tradedCurrency buy test", "status": "failed", "statusDetails": {"message": "AssertionError: execute api did not EXECUTED\nassert 'TRADE_UNSUCC..._PLEASE_RETRY' == 'EXECUTED'\n  \n  - EXECUTED\n  + TRADE_UNSUCCESSFUL_PLEASE_RETRY", "trace": "case_type = 'Positive', case_title = '5.SOL-USDT 5 tradedCurrency buy test'\nquote_param = {'quoteRequest': {'buyTradedCurrency': True, 'settlementCurrency': 'USDT', 'tradedCurrency': 'SOL', 'tradedCurrencyAmount': 5}}\nquote_expected = 'FULL_QUOTE', execute_expected = 'EXECUTED'\n\n    @pytest.mark.usefixtures(\"rfq_order_before_check\")\n    @pytest.mark.parametrize('case_type,case_title,quote_param,quote_expected,execute_expected',\n                             rfq_data_output(testdata))\n    @allure.parent_suite(\"RFQ API TEST\")\n    @allure.suite(\"IPA Test Cases\")\n    @allure.epic('RFQ API TEST')\n    @allure.feature(\"IPA Test Cases\")\n    @allure.title(\"{case_title}\")\n    @pytest.mark.flaky(reruns=reruns, reason='Quote Or Execute may Fail')\n    def test_makeRFQorder(case_type, case_title, quote_param, quote_expected, execute_expected):\n        allure.dynamic.story(f\"{case_type} Test Cases\")\n        allure.dynamic.sub_suite(f\"{case_type} Test Cases\")\n        logger.log(case_type)\n        try:\n            check_ccy_pair(quote_param)\n            client = RFQorder()\n            client.check_aggregated_balance_dic_before_trade()\n            client.quote_request(quote_param, quote_expected)\n            client.check_before_trade()\n            client.execute_request(execute_expected)\n            client.compare_quote_execute_details()\n            client.check_after_trade()\n            client.check_user_tran()\n            client.check_RFS_console_tran()\n            client.assertion_ops_tran_RFQ()\n    \n        except AssertionError or Exception as e:\n            # 如果失败，等待一段时间再重试\n            time.sleep(2)  # 等待 2 秒\n>           raise e\n\ntestcase/test_RFQorder.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntestcase/test_RFQorder.py:184: in test_makeRFQorder\n    client.execute_request(execute_expected)\ntestcase/test_RFQorder.py:104: in execute_request\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_RFQorder.RFQorder object at 0x7fe438ce10a0>\nexecute_expected = 'EXECUTED'\n\n    @allure.step(\"Make Execute Request\")\n    def execute_request(self, execute_expected):\n        execute_param_ = {'tradeRequest': {}}\n        execute_param_['tradeRequest']['quoteId'] = self.quote_id\n        try:\n            execute_res = execute_trade(execute_param_, self.trace_id)\n            self.execute_res = execute_res\n            assert execute_res[\n                       'response'].status_code == 200, f\"Expected status code 200, but got {execute_res['response'].status_code}\"\n>           assert execute_res['res']['tradeResponse'][\n                       'responseCode'] == execute_expected, f'execute api did not {execute_expected}'\nE                      AssertionError: execute api did not EXECUTED\nE                      assert 'TRADE_UNSUCC..._PLEASE_RETRY' == 'EXECUTED'\nE                        \nE                        - EXECUTED\nE                        + TRADE_UNSUCCESSFUL_PLEASE_RETRY\n\ntestcase/test_RFQorder.py:90: AssertionError"}, "steps": [{"name": "check_ccy_pair", "status": "passed", "steps": [{"name": "rfs_cc_pair_status", "status": "passed", "start": 1725334138358, "stop": 1725334139003}], "parameters": [{"name": "quote_req", "value": "{'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USDT', 'tradedCurrencyAmount': 5}}"}], "start": 1725334138358, "stop": 1725334139004}, {"name": "record aggregated_balance_before trade", "status": "passed", "steps": [{"name": "rfs_aggregated_positions", "status": "passed", "start": 1725334139005, "stop": 1725334139833}], "start": 1725334139004, "stop": 1725334139833}, {"name": "Asking QuoteId Request", "status": "passed", "attachments": [{"name": "Asking QuoteId Details", "source": "b15f8053-eabe-4b2e-af6e-573b70f3fd88-attachment.json", "type": "application/json"}], "parameters": [{"name": "quote_param", "value": "{'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USDT', 'tradedCurrencyAmount': 5}}"}, {"name": "quote_expected", "value": "'FULL_QUOTE'"}], "start": 1725334139833, "stop": 1725334140583}, {"name": "Check Balance Before Trade", "status": "passed", "steps": [{"name": "brokerage_balance_order_before_check", "status": "passed", "steps": [{"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'SOL'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334140584, "stop": 1725334141364}, {"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'USDT'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334141365, "stop": 1725334142175}], "parameters": [{"name": "res", "value": "{'response': <Response [200]>, 'res': {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USDT', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '690.692', 'quotedTradedCurrencyAmount': '5', 'executedPrice': '138.138447', 'retailRateInSettlementCurrency': '138.138447', 'quoteId': 'bDtAmqR52+CEGPOTtjYWSEuwCx1GNtve3I7xf4vN/AvJo1mWz1VeQrLGNjJfHSt0XtuXZsCHHMbI5+5bbortUmqqh9xsYcKhdjaoirBCrwMkAMx/Gj7L8xpBQUcehfnTBF0boXRPrGPBCEnQqagzM9ucSMci6SRMA9XuzragE8IwqW7YI/gn+VRxNRZmMbAsov8sY5vUZW9IZYrzXYUl/oIrKbx5yvlqCr/uDR/SSYwb3C2Z7MDY01cID8LaQ9F2+AHEsDb8Yx6ATO1aoxwu5wweNbE8gtjYXO0Hpe7DVFn4cSMOsdetj4nP83iA4aObR6UnFFm6iBVKxzRKVrIoYeo0ORM=', 'quoteExpiresAt': 1725334147496, 'quoteCreatedAt': 1725334140496, 'dealerSettlementCurrency': 'USDT', 'dealerSettlementCurrencyAmount': '690.692', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334140496, 'resultCode': 'OK'}, 'req_msg': \"<Request> [4d18faaa-61d8-4edd-a5f1-4319e027b740] => POST api/3/retail/quote <Param> => {'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USDT', 'tradedCurrencyAmount': 5}, 'tonce': 1725334139833542}\", 'res_msg': \"<Response> [4d18faaa-61d8-4edd-a5f1-4319e027b740] => {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USDT', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '690.692', 'quotedTradedCurrencyAmount': '5', 'executedPrice': '138.138447', 'retailRateInSettlementCurrency': '138.138447', 'quoteId': 'bDtAmqR52+CEGPOTtjYWSEuwCx1GNtve3I7xf4vN/AvJo1mWz1VeQrLGNjJfHSt0XtuXZsCHHMbI5+5bbortUmqqh9xsYcKhdjaoirBCrwMkAMx/Gj7L8xpBQUcehfnTBF0boXRPrGPBCEnQqagzM9ucSMci6SRMA9XuzragE8IwqW7YI/gn+VRxNRZmMbAsov8sY5vUZW9IZYrzXYUl/oIrKbx5yvlqCr/uDR/SSYwb3C2Z7MDY01cID8LaQ9F2+AHEsDb8Yx6ATO1aoxwu5wweNbE8gtjYXO0Hpe7DVFn4cSMOsdetj4nP83iA4aObR6UnFFm6iBVKxzRKVrIoYeo0ORM=', 'quoteExpiresAt': 1725334147496, 'quoteCreatedAt': 1725334140496, 'dealerSettlementCurrency': 'USDT', 'dealerSettlementCurrencyAmount': '690.692', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334140496, 'resultCode': 'OK'}\"}"}], "start": 1725334140584, "stop": 1725334142176}], "start": 1725334140583, "stop": 1725334142176}, {"name": "Make Execute Request", "status": "failed", "statusDetails": {"message": "AssertionError: execute api did not EXECUTED\nassert 'TRADE_UNSUCC..._PLEASE_RETRY' == 'EXECUTED'\n  \n  - EXECUTED\n  + TRADE_UNSUCCESSFUL_PLEASE_RETRY\n", "trace": "  File \"/Users/shawn.xiao/PycharmProjects/pythonProject4/.venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/shawn.xiao/PycharmProjects/pythonProject4/testcase/test_RFQorder.py\", line 104, in execute_request\n    raise e\n  File \"/Users/shawn.xiao/PycharmProjects/pythonProject4/testcase/test_RFQorder.py\", line 90, in execute_request\n    assert execute_res['res']['tradeResponse'][\n"}, "steps": [{"name": "Execute Fail and Check if money lost", "status": "passed", "steps": [{"name": "brokerage_balance_order_before_check", "status": "passed", "steps": [{"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'SOL'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334143401, "stop": 1725334144442}, {"name": "get_account_information", "status": "passed", "parameters": [{"name": "currency", "value": "'USDT'"}, {"name": "wallet", "value": "'Wallets'"}, {"name": "account", "value": "'Brokerage_Available_Balance'"}, {"name": "multiple", "value": "False"}], "start": 1725334144443, "stop": 1725334145187}], "parameters": [{"name": "res", "value": "{'response': <Response [200]>, 'res': {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USDT', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '690.692', 'quotedTradedCurrencyAmount': '5', 'executedPrice': '138.138447', 'retailRateInSettlementCurrency': '138.138447', 'quoteId': 'bDtAmqR52+CEGPOTtjYWSEuwCx1GNtve3I7xf4vN/AvJo1mWz1VeQrLGNjJfHSt0XtuXZsCHHMbI5+5bbortUmqqh9xsYcKhdjaoirBCrwMkAMx/Gj7L8xpBQUcehfnTBF0boXRPrGPBCEnQqagzM9ucSMci6SRMA9XuzragE8IwqW7YI/gn+VRxNRZmMbAsov8sY5vUZW9IZYrzXYUl/oIrKbx5yvlqCr/uDR/SSYwb3C2Z7MDY01cID8LaQ9F2+AHEsDb8Yx6ATO1aoxwu5wweNbE8gtjYXO0Hpe7DVFn4cSMOsdetj4nP83iA4aObR6UnFFm6iBVKxzRKVrIoYeo0ORM=', 'quoteExpiresAt': 1725334147496, 'quoteCreatedAt': 1725334140496, 'dealerSettlementCurrency': 'USDT', 'dealerSettlementCurrencyAmount': '690.692', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334140496, 'resultCode': 'OK'}, 'req_msg': \"<Request> [4d18faaa-61d8-4edd-a5f1-4319e027b740] => POST api/3/retail/quote <Param> => {'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USDT', 'tradedCurrencyAmount': 5}, 'tonce': 1725334139833542}\", 'res_msg': \"<Response> [4d18faaa-61d8-4edd-a5f1-4319e027b740] => {'quoteResponse': {'responseCode': 'FULL_QUOTE', 'buyTradedCurrency': True, 'settlementCurrency': 'USDT', 'tradedCurrency': 'SOL', 'quotedSettlementCurrencyAmount': '690.692', 'quotedTradedCurrencyAmount': '5', 'executedPrice': '138.138447', 'retailRateInSettlementCurrency': '138.138447', 'quoteId': 'bDtAmqR52+CEGPOTtjYWSEuwCx1GNtve3I7xf4vN/AvJo1mWz1VeQrLGNjJfHSt0XtuXZsCHHMbI5+5bbortUmqqh9xsYcKhdjaoirBCrwMkAMx/Gj7L8xpBQUcehfnTBF0boXRPrGPBCEnQqagzM9ucSMci6SRMA9XuzragE8IwqW7YI/gn+VRxNRZmMbAsov8sY5vUZW9IZYrzXYUl/oIrKbx5yvlqCr/uDR/SSYwb3C2Z7MDY01cID8LaQ9F2+AHEsDb8Yx6ATO1aoxwu5wweNbE8gtjYXO0Hpe7DVFn4cSMOsdetj4nP83iA4aObR6UnFFm6iBVKxzRKVrIoYeo0ORM=', 'quoteExpiresAt': 1725334147496, 'quoteCreatedAt': 1725334140496, 'dealerSettlementCurrency': 'USDT', 'dealerSettlementCurrencyAmount': '690.692', 'isInvoice': False, 'isCardLoad': False, 'isPtsSufficient': False, 'isMtPreDealPreCheckSuccess': False}, 'timestamp': 1725334140496, 'resultCode': 'OK'}\"}"}], "start": 1725334143401, "stop": 1725334145187}], "start": 1725334143400, "stop": 1725334145187}], "attachments": [{"name": "Make Execute Details", "source": "cd472d14-cab8-4484-ae58-a1ae55d4b236-attachment.json", "type": "application/json"}], "parameters": [{"name": "execute_expected", "value": "'EXECUTED'"}], "start": 1725334142177, "stop": 1725334145187}], "parameters": [{"name": "case_type", "value": "'Positive'"}, {"name": "case_title", "value": "'5.SOL-USDT 5 tradedCurrency buy test'"}, {"name": "quote_param", "value": "{'quoteRequest': {'buyTradedCurrency': True, 'tradedCurrency': 'SOL', 'settlementCurrency': 'USDT', 'tradedCurrencyAmount': 5}}"}, {"name": "quote_expected", "value": "'FULL_QUOTE'"}, {"name": "execute_expected", "value": "'EXECUTED'"}], "start": 1725334138357, "stop": 1725334147190, "uuid": "3924900e-06ec-4c51-8739-9e185d4db7ab", "historyId": "67035197cedf20221256d675cf0daff0", "testCaseId": "5be44c1e5767aad4688d40906fc19936", "fullName": "testcase.test_RFQorder#test_makeRFQorder", "labels": [{"name": "story", "value": "Positive Test Cases"}, {"name": "subSuite", "value": "Positive Test Cases"}, {"name": "epic", "value": "RFQ API TEST"}, {"name": "parentSuite", "value": "RFQ API TEST"}, {"name": "feature", "value": "IPA Test Cases"}, {"name": "suite", "value": "IPA Test Cases"}, {"name": "tag", "value": "flaky(reruns=1, reason='Quote Or Execute may Fail')"}, {"name": "tag", "value": "@pytest.mark.usefixtures('rfq_order_before_check')"}, {"name": "host", "value": "shawnxiaooslcom.local"}, {"name": "thread", "value": "69044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_RFQorder"}]}